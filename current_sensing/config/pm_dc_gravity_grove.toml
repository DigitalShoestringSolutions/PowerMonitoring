#=-= Define Interface Modules =-=
[interface.i2c0]
    module="i2c"
    class="I2C"
[interface.i2c0.config]
    bus=1

#=-= Define Device Modules =-=
[device.adc_0]
    module="adc_grove"
    class="PiHat"
    interface="i2c0"
[device.adc_0.config]
    adc_channel=0
[device.adc_0.variables]
    v_in = "v_amp_out"

#=-= Define Calculation Modules =-=
[calculation.machine_name]
    module="gen_constants"
    class="ConstantSet"
[calculation.machine_name.config]
    machine = "Machine_1"
[calculation.machine_name.variables]

[calculation.calibrate]
    module="gen_calibrate"
    class="MultiplierOffset"
[calculation.calibrate.config]  # These values are a blind guess.
    offset = -15.86             # = (3.3V/2)*multiplier
    multiplier = 9.61           # Kept the same as empirically found with ADS1115
[calculation.calibrate.variables]
    raw_value = "v_amp_out"
    calibrated_value = "current"

#=-= Define Calculation Pipelines =-=
[pipelines]
    single_clamp = ["calibrate","machine_name"]

#=-= Define Measurements Pipelines =-=
[measurement]
    module="gen_sample"
    class="SingleSampleAvg"
[measurement.config]
    period = 1.0 # seconds
    n_samples = 5
[[measurement.sensing_stacks]]
    device = "adc_0"
    pipeline = "single_clamp"
    constants = {'phase'='single'}

[output.overall]
    topic = "power_monitoring/{{machine}}/{{phase}}"
[output.overall.message_spec]
    timestamp = '$.timestamp'
    power = '$.power'
    current = "$.current"
    phase = "$.phase"
    machine="$.machine"


[mqtt]
    broker = "mqtt.docker.local"
    port = 1883   #common mqtt ports are 1883 and 8883
    topic_prefix = ""

    #reconnection characteristics
    # start: timeout = initial,
    # if timeout < limit then
    #   timeout = timeout*backoff
    # else
    #   timeout = limit
    reconnect.initial = 5 # seconds
    reconnect.backoff = 2 # multiplier
    reconnect.limit = 60 # seconds